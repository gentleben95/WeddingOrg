@page "/addwedding"
@inject WeddingOrg.Controllers.WeddingsController WeddingsController
@inject WeddingOrg.Controllers.PhotographersController PhotographerController
@inject WeddingOrg.Controllers.RestaurantsController RestaurantsController
@inject WeddingOrg.Controllers.CameramenController CameramenController
@inject WeddingOrg.Repositories.IWeddingsRepository IWEddingsRepository
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using WeddingOrg.DTOs

<PageTitle>Dodaj wesele</PageTitle>
<RadzenTemplateForm TItem="FilledInfo" Data=@addWedding Submit=@OnSubmit>
    <RadzenCard Class="my-5 mx-auto" Style="max-width: 400px;">
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5">Data podpisania umowy*</RadzenText>
        <RadzenTextBox Placeholder="dd.mm.rrrr" Name="DateOfSigning" @bind-Value=@addWedding.DateOfSigning Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Data wesela*</RadzenText>
        <RadzenTextBox Placeholder="dd.mm.rrrr" Name="DateOfWedding" @bind-Value=@addWedding.DateOfWedding Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Panna młoda - imię*</RadzenText>
        <RadzenTextBox  Placeholder="np. Agnieszka" Name="BrideName" @bind-Value=@addWedding.BrideName Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Panna młoda - numer telefonu*</RadzenText>
        <RadzenTextBox  Placeholder="np. 555 666 888" Name="BridePhoneNumber" @bind-Value=@addWedding.BridePhoneNumber Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Panna młoda - email</RadzenText>
        <RadzenTextBox Placeholder="np. agnieszka@gmail.com" Name="BrideEmail" @bind-Value=@addWedding.BrideEmail Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Panna młoda - instagram</RadzenText>
        <RadzenTextBox Placeholder="np. agnieszka.instagram.com" Name="BrideInstagram" @bind-Value=@addWedding.BrideInstagram Style="width: 100%;" />        

        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Pan młody - imię*</RadzenText>
        <RadzenTextBox Placeholder="np. Tomasz" Name="GroomName" @bind-Value=@addWedding.GroomName
                       Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Pan młody - numer telefonu*</RadzenText>
        <RadzenTextBox Placeholder="np. 555 666 888" Name="GroomPhoneNumber" @bind-Value=@addWedding.GroomPhoneNumber
                     Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Pan młody - email</RadzenText>
        <RadzenTextBox Placeholder="np. tomasz@gmail.com" Name="GroomEmail" @bind-Value=@addWedding.GroomEmail
                    Style="width: 100%;" />
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="mt-4">Pan młody - instagram</RadzenText>
        <RadzenTextBox Placeholder="np. tomasz.instagram.com" Name="GroomInstagram" @bind-Value=@addWedding.GroomInstagram
                    Style="width: 100%;" />                      

        <RadzenText Data TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Wybierz fotografa</RadzenText>
        <RadzenDropDown AllowClear="true" TValue="int" Class="w-100"
                        Data=@Photographers TextProperty="Facebook" ValueProperty="Id"
                        @bind-Value="@addWedding.SelectedPhotographerId" />
        <RadzenText Data TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Wybierz kamerzystę</RadzenText>
        <RadzenDropDown AllowClear="true" TValue="int" Class="w-100"
                        Data=@Cameramen TextProperty="Facebook" ValueProperty="Id"
                        @bind-Value="@addWedding.SelectedCameramanId" />
        <RadzenText Data TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Wybierz restaurację</RadzenText>
        <RadzenDropDown AllowClear="true" TValue="int" Class="w-100"
                        Data=@Restaurants TextProperty="Facebook" ValueProperty="Id"
                        @bind-Value="@addWedding.SelectedRestaurantId" />
        
            <div class="container-fluid button-demo">
                    <div class="row">
            <div class="col-md-12 d-flex align-items-end justify-content-left mt-4">
                    <RadzenButton ButtonType="ButtonType.Submit" Shade="Shade.Lighter" Text="Dodaj" ButtonStyle="ButtonStyle.Primary" />                               
            </div>
        </div>
        </div>
    </RadzenCard>
</RadzenTemplateForm>
<div class="form-group">
    <input class="form-control" type="text" placeholder="Filtruj..."
           @bind="Filter"
           @bind:event="oninput">
</div>
<table class="table table-striped">
    <thead class="thead-light">
        <tr>
                <th>ID</th><th>Data umowy</th> <th>Data wesela</th> <th>Panna młoda</th><th>Pan młody</th>                
                <th>Fotograf</th>   <th>Kamerzysta</th> <th>Restauracja</th>
            </tr>
    </thead>
    <tbody>
        @foreach (var wedding in Weddings)
        {
            if (!IsVisible(wedding))
                continue;
            <tr>
                <td>@wedding.Id</td>  
                <td>@wedding.DateOfSigningTheContract</td>
                <td>@wedding.DateOfTheWedding</td>
                <td>@wedding.Bride.Name, 
                    @wedding.Bride.PhoneNumber</td>
                <td>@wedding.Groom.Name, 
                    @wedding.Groom.PhoneNumber </td>
                <td>@if (wedding.Photographer != null)
                    {
                        @wedding.Photographer.Facebook;
                    }
                    </td>
                <td>
                        @if (wedding.Cameraman != null)
                        {
                            @wedding.Cameraman.Facebook;
                        }
                    </td>
                    <td>
                        @if (wedding.Restaurant != null)
                        {
                            @wedding.Restaurant.Facebook;
                        }
                    </td>
            </tr>
        }
    </tbody>
</table>
@code {
    protected override async Task OnInitializedAsync()
    {
        Weddings = (await WeddingsController.GetWeddings()).ToList();
        Photographers = (await PhotographerController.GetPhotographers()).ToList();
        Cameramen = (await CameramenController.GetCameramen()).ToList();        
        Restaurants = (await RestaurantsController.GetRestaurants()).ToList();
    }
    private List<WeddingOrg.Models.Wedding> Weddings = new();
    private List<WeddingOrg.Models.Cameraman> Cameramen = new();
    private List<WeddingOrg.Models.Photographer> Photographers = new();
    private List<WeddingOrg.Models.Restaurant> Restaurants = new();

    public class FilledInfo
    {
        public string? DateOfSigning { get; set; }
        public string? DateOfWedding { get; set; }
        public string? BrideName { get; set; }
        public string? BridePhoneNumber { get; set; }
        public string? BrideEmail { get; set; }
        public string? BrideInstagram { get; set; }
        public string? GroomName { get; set; }
        public string? GroomInstagram { get; set; }
        public string? GroomEmail { get; set; }
        public string? GroomPhoneNumber { get; set; }
        public string? PhotographerFacebook { get; set; } 
        public string? PhotographerInstagram { get; set; }
        public string? CameramanFacebook { get; set; }
        public string? CameramanInstagram { get; set; }
        public string? RestaurantFacebook { get; set; }
        public string? RestaurantInstagram { get; set; }
        public int SelectedPhotographerId { get; set; } 
        public int SelectedCameramanId { get; set; }
        public int SelectedRestaurantId { get; set; }
    }
    FilledInfo addWedding = new FilledInfo();
    async void OnSubmit(FilledInfo arg)
    {
        var updateWeddingDto = new UpdateWeddingBrideGroomDto(addWedding.DateOfSigning, addWedding.DateOfWedding, 
            addWedding.BrideName, addWedding.BridePhoneNumber, addWedding.BrideEmail, addWedding.BrideInstagram, 
            addWedding.GroomName, addWedding.GroomPhoneNumber, addWedding.GroomEmail, addWedding.GroomInstagram);
        var result = await WeddingsController.CreateWedding(updateWeddingDto);
        await PhotographerController.AddPhotographerToWedding(result, addWedding.SelectedPhotographerId);
        await CameramenController.AddCameramanToWedding(result, addWedding.SelectedCameramanId);
        await RestaurantsController.AddRestaurantToWedding(result, addWedding.SelectedRestaurantId);
        Weddings = (await WeddingsController.GetWeddings()).ToList();
        StateHasChanged();        
    } 
    public string Filter { get; set; }
    public bool IsVisible(
        WeddingOrg.Models.Wedding wedding1)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;
        if (wedding1.DateOfSigningTheContract.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Bride.PhoneNumber.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Bride.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Groom.PhoneNumber.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Groom.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.DateOfSigningTheContract.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Cameraman.Facebook.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Photographer.Facebook.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Restaurant.Facebook.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    
}
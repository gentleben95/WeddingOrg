@*@page "/weddings"
@inject WeddingOrg.Controllers.WeddingsController WeddingController

<PageTitle>Baza wesel</PageTitle>

<h1>Wesela</h1>

@if (Weddings1 == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-group">
        <input class="form-control" type="text" placeholder="Filtruj..."
           @bind="Filter"
           @bind:event="oninput">
    </div>
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Data umowy</th>
                <th>Data wesela</th>
                <th>Panna młoda</th>
                <th>Pan młody</th>
                <th>Fotograf</th>
                <th>Kamerzysta</th>
                <th>Restauracja</th>
            </tr>
        </thead>
        <tbody>  
            @foreach (var wedding in Weddings1)
            {
                if (!IsVisible(wedding))
                continue;
                <tr>
                    <td>
                        @wedding.Id
                    </td>
                    <td>
                        @wedding.DateOfSigningTheContract
                    </td>
                    <td>

                        @wedding.DateOfTheWedding 
                    </td>
                    <td>
                        @wedding.Bride.Name, @wedding.Bride.PhoneNumber
                    </td>
                    <td>
                        @wedding.Groom.Name, @wedding.Groom.PhoneNumber
                    </td>
                    <td>
                        @if (wedding.Photographer != null)
                        {
                            @wedding.Photographer.Facebook
                            ;
                        }
                    </td>
                    <td>
                        @if (wedding.Cameraman != null)
                        {
                            @wedding.Cameraman.Facebook
                            ;
                        }
                    </td>
                    <td>
                        @if (wedding.Restaurant != null)
                        {
                            @wedding.Restaurant.Facebook;
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        Weddings1 = (await WeddingController.GetWeddings()).ToList();

    }
    private List<WeddingOrg.Models.Wedding> Weddings1 = new();

    public string Filter { get; set; }
    public bool IsVisible(
        WeddingOrg.Models.Wedding wedding1)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;
        if (wedding1.DateOfSigningTheContract.Contains(Filter, StringComparison.OrdinalIgnoreCase) )
    return true;
        if (wedding1.Bride.PhoneNumber.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Bride.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Groom.PhoneNumber.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Groom.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.DateOfSigningTheContract.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Cameraman.Facebook.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Photographer.Facebook.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
        if (wedding1.Restaurant.Facebook.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}
*@